Diagnostic 1
	Id: Moq1000
	Location: SourceFile(Test0.cs[521..530))
	Highlight: (1, true)
	Lines: var mock1 = new Moq.Mock<Foo>(1, true);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 2
	Id: Moq1000
	Location: SourceFile(Test0.cs[602..611))
	Highlight: (2, true)
	Lines: var mock2 = new Mock<ConstructorArgumentsShouldMatch.Foo>(2, true);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 3
	Id: Moq1000
	Location: SourceFile(Test0.cs[683..691))
	Highlight: ("1", 3)
	Lines: var mock3 = new Mock<ConstructorArgumentsShouldMatch.Foo>("1", 3);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 4
	Id: Moq1000
	Location: SourceFile(Test0.cs[763..786))
	Highlight: (new int[] { 1, 2, 3 })
	Lines: var mock4 = new Mock<ConstructorArgumentsShouldMatch.Foo>(new int[] { 1, 2, 3 });
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 5
	Id: Moq1000
	Location: SourceFile(Test0.cs[875..905))
	Highlight: (MockBehavior.Strict, 4, true)
	Lines: var mock1 = new Mock<Foo>(MockBehavior.Strict, 4, true);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 6
	Id: Moq1000
	Location: SourceFile(Test0.cs[981..1010))
	Highlight: (MockBehavior.Loose, 5, true)
	Lines: var mock2 = new Moq.Mock<ConstructorArgumentsShouldMatch.Foo>(MockBehavior.Loose, 5, true);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

Diagnostic 7
	Id: Moq1000
	Location: SourceFile(Test0.cs[1086..1114))
	Highlight: (MockBehavior.Loose, "2", 6)
	Lines: var mock3 = new Moq.Mock<ConstructorArgumentsShouldMatch.Foo>(MockBehavior.Loose, "2", 6);
	Severity: Warning
	Message: Sealed classes cannot be mocked.

